<Window x:Class="PracticeBinding.Edit"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PracticeBinding"
        mc:Ignorable="d"
        Title="Edit" Height="170" Width="350">
    <Grid Margin="0 10 0 0">
        <!--can update or delete-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="70"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <!-- first name -->
        <Label VerticalAlignment="Center" Foreground="Black" Grid.Column="0" Grid.Row="0">Name:</Label>
        <Label VerticalAlignment="Center" Foreground="Black" Grid.Column="0" Grid.Row="1">Last:</Label>
        <Label VerticalAlignment="Center" Foreground="Black" Grid.Column="0" Grid.Row="2">Email:</Label>

        <!--<TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Name="user" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0" Width="200"/>-->
        <!--<TextBox Text="{Binding LastName, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Height="20" Name="userlast" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" Width="200"/>
        <TextBox Text="{Binding Email, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Height="20" Name="useremail" VerticalAlignment="Center" Grid.Column="1" Grid.Row="2" Width="200"/>
        -->
        <!-- this rule concerns the binding expression -->
        <TextBox Name="user" Width="250" Grid.Row="0" Grid.Column="1" Height="20">
            <TextBox.Text>
                <Binding Path="Name" UpdateSourceTrigger="Explicit" >
                    <Binding.ValidationRules>
                        <local:TextLengthRule Max="25" EmailCheck="0"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBox Name="userlast" Width="250" Grid.Row="1" Grid.Column="1" Height="20">
            <TextBox.Text>
                <Binding Path="LastName" UpdateSourceTrigger="Explicit" >
                    <Binding.ValidationRules>
                        <local:TextLengthRule Max="25" EmailCheck="0"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBox Name="useremail" Width="250" Grid.Row="2" Grid.Column="1" Height="20">
            <TextBox.Text>
                <Binding Path="Email" UpdateSourceTrigger="Explicit" >
                    <Binding.ValidationRules>
                        <local:TextLengthRule Max="25" EmailCheck="1"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <WrapPanel Grid.Column="1" Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Width="250">
            <Button Margin="3" Width="70" Click="Button_Click_Update">Update
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=user}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=userlast}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=useremail}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Margin="3" Width="70" Click="Button_Click_Cancel">Cancel/Exit</Button>
            <Button Margin="3" Width="70" Click="Button_Click_Delete">Delete</Button>
        </WrapPanel>

    </Grid>
</Window>
